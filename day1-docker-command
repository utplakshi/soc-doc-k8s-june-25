#this will show all the command related to docker command line
47  docker
  ###this will show the docker server information. 
   48  docker info

  ##lets create our first container 
   51  docker container run --publish 80:80 --detach nginx
     #this will show the running container
   52  docker ps
   53  curl localhost
##then open a new tab in the browser and copy the dns name from the lms portal and paste it this will show the test page
##if you try to create a new container from the same image it will not download the image again an again. which means it always checkj the local repo 
 57  docker container run --publish 81:80 --detach nginx
#to verify the same you can run the below command
59  docker images
##lets check if there are two different running with same images 
[root@ip-172-31-115-189 ~]$ docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED         STATUS         PORTS                                 NAMES
9151cd789e71   nginx     "/docker-entrypoint.…"   2 minutes ago   Up 2 minutes   0.0.0.0:81->80/tcp, [::]:81->80/tcp   dazzling_newton
1d4fc81ed806   nginx     "/docker-entrypoint.…"   9 minutes ago   Up 9 minutes   0.0.0.0:80->80/tcp, [::]:80->80/tcp   nervous_leavitt
[root@ip-172-31-115-189 ~]$
##container vs process id 
##lets try to understand the concept behind --detach mode
[root@ip-172-31-115-189 ~]$ docker container run --publish 81:80 --detach nginx
###what does it means
###-- detach is like an daemon or we are running our container as background process. 
[root@ip-172-31-115-189 ~]$ docker container run --publish 82:80 httpd
AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 172.17.0.4. Set the 'ServerName' directive globally to suppress this message
AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 172.17.0.4. Set the 'ServerName' directive globally to suppress this message
[Tue Jul 22 08:41:41.035373 2025] [mpm_event:notice] [pid 1:tid 1] AH00489: Apache/2.4.64 (Unix) configured -- resuming normal operations
[Tue Jul 22 08:41:41.035511 2025] [core:notice] [pid 1:tid 1] AH00094: Command line: 'httpd -D FOREGROUND'
####the purpose of running detach mode is to run your container as background process . 
##press ctrl c this will kill the process
[root@ip-172-31-115-189 ~]$ docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED             STATUS             PORTS                                 NAMES
9151cd789e71   nginx     "/docker-entrypoint.…"   About an hour ago   Up About an hour   0.0.0.0:81->80/tcp, [::]:81->80/tcp   dazzling_newton
1d4fc81ed806   nginx     "/docker-entrypoint.…"   2 hours ago         Up 2 hours         0.0.0.0:80->80/tcp, [::]:80->80/tcp   nervous_leavitt
###docker ps -a will show all the running and stopped container
[root@ip-172-31-115-189 ~]$ docker ps -a
CONTAINER ID   IMAGE     COMMAND                  CREATED              STATUS                      PORTS                                 NAMES
7d4872155293   httpd     "httpd-foreground"       56 seconds ago       Exited (0) 14 seconds ago                                         ecstatic_hoover

#####second way
[root@ip-172-31-115-189 ~]$ docker run --name mongo -d mongo
Unable to find image 'mongo:latest' locally
[root@ip-172-31-115-189 ~]$ docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED             STATUS             PORTS                                 NAMES
b7b39c70d3b7   mongo     "docker-entrypoint.s…"   7 seconds ago       Up 4 seconds       27017/tcp                             mongo
###top is a command in linux which is used to check all your process id 
[root@ip-172-31-115-189 ~]$ docker top mongo
UID                 PID                 PPID                C                   STIME               TTY                 TIME                CMD
lxd                 8088                8065                2                   08:45               ?                   00:00:00            mongod --bind_ip_all
#######once you check the same you will get an process id 
 80  docker ps
   81  docker top mongo
   #this will show all the running process in your linux system
   83  ps aux
   84  docker top mongo
   85  kill -9 8088
#this will show the container is in down state
   86  docker ps
   87  docker ps -a

#####lets create an mysql db 
   99  docker container run -d -p 3306:3306 --name db -e MYSQL_RANDOM_ROOT_PASSWORD=true mysql
#this db is being created with environment varaibles 
  100  docker ps
###this will show the password of mysql 
  101  docker logs db
##copy the password in notepad 
  102  docker exec -it db bash
###once you login you can create a database 
#login inside the db
mysql -u root -p
#then press enter
create database employee;
show databases;
########
exit
exit
#####docker networking 
108  docker network ls
#this will create a custom network 
  109  docker network create my_app_net
  110  docker network ls
#we are creating two different container added to your custom network
  111  docker run -d --name new_nginx --network my_app_net nginx
  112  docker run -d --name my_nginx --network my_app_net nginx
  113  docker network ls
##if you check your custom network you will see there are two container on the custom network
  114  docker network inspect my_app_net
#verify the same 
 docker exec -it new_nginx curl my_nginx




