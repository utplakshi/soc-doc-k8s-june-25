
125  docker run -d --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=true mysql
  126  docker ps
  ##docker volume show me that the volume is created by with an id which is difficult to understand
  127  docker volume ls
  #we want to give a custom name to the volume also we will use an mysql version image
  [root@ip-172-31-115-189 ~]$ docker run -d --name db1 -e MYSQL_ALLOW_EMPTY_PASSWORD=true -v mysql-db:/var/lib/mysql mysql:8
c5bebb0ec1eaacc6e248a0c94e0610fa91ead0a104c5eca427ea6f7b44321971
[root@ip-172-31-115-189 ~]$ docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                                                    NAMES
c5bebb0ec1ea   mysql:8   "docker-entrypoint.sâ€¦"   3 seconds ago    Up 3 seconds    3306/tcp, 33060/tcp                                      db1
###once we created the mysql container with a different version  -v mysql-db:/var/lib/mysq #-v will create a persiostent volume mysql-db this is the label of the volume /var/lib/mysql #this is the path where container is storing your data. 
 #this will give me the custom volume
  [root@ip-172-31-115-189 ~]$ docker volume ls
DRIVER    VOLUME NAME

local     mysql-db
  #if i do inspect command this will show me the path of the volume or the data where it is located in your system
[root@ip-172-31-115-189 ~]$ docker volume inspect mysql-db
[
    {
        "CreatedAt": "2025-07-22T10:44:41Z",
        "Driver": "local",
        "Labels": null,
        "Mountpoint": "/var/lib/docker/volumes/mysql-db/_data",
        "Name": "mysql-db",
        "Options": null,
        "Scope": "local"
    }
]
##lets complete our first step login inside the db and create a custom database 
  [root@ip-172-31-115-189 ~]$ docker exec -it db1 bash
bash-5.1# mysql -u root -p
  ##there is no password so just press enter 
  mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
4 rows in set (0.00 sec)

mysql> create database employe;
Query OK, 1 row affected (0.01 sec)

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| employe            |
| information_schema |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
5 rows in set (0.00 sec)

###lets exit mysql and container 
  [root@ip-172-31-115-189 ~]$ cd /var/lib/docker/volumes/mysql-db/_data
[root@ip-172-31-115-189 _data]$ ls
'#ib_16384_0.dblwr'  '#innodb_temp'   binlog.000002   ca.pem            employe 
  ###again login and create a new database
  ##do ls check the database is created or not in the folder
#second exercise we delete the database then also the data persist
[root@ip-172-31-115-189 ~]$ docker run -d --name db2 -e MYSQL_ALLOW_EMPTY_PASSWORD=true -v mysql-db2:/var/lib/mysql mysql:8
95e125a1b605b67204dc95ce1f2ebc1a48889e3ce58a9fbf64c48cad7117359b
#check the volume name 
[root@ip-172-31-115-189 ~]$ docker volume ls

local     mysql-db2
#lets inspect the volume 
[root@ip-172-31-115-189 ~]$ docker volume inspect  mysql-db2
[
    {
        "CreatedAt": "2025-07-22T11:19:45Z",
        "Driver": "local",
        "Labels": null,
        "Mountpoint": "/var/lib/docker/volumes/mysql-db2/_data",
        "Name": "mysql-db2",
        "Options": null,
        "Scope": "local"
    }
]
##this will give the path of the volume 
[root@ip-172-31-115-189 ~]$ ls /var/lib/docker/volumes/mysql-db2/_data
'#ib_16384_0.dblwr'  '#innodb_temp'   binlog.000002   ca.pem            ib_buffer_pool   mysql        mysql_upgrade_history   public_key.pem    sys
'#ib_16384_1.dblwr'   auto.cnf        binlog.index    client-cert.pem   ibdata1          mysql.ibd    performance_schema      server-cert.pem   undo_001
'#innodb_redo'        binlog.000001   ca-key.pem      client-key.pem    ibtmp1           mysql.sock   private_key.pem         server-key.pem    undo_002
#lets login inside the container and create a custom database
[root@ip-172-31-115-189 ~]$ docker exec -it db2 bash
bash-5.1# mysql -u root -p
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 8
Server version: 8.4.5 MySQL Community Server - GPL

Copyright (c) 2000, 2025, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql>
mysql> create database springdb;
Query OK, 1 row affected (0.00 sec)

mysql> exit
Bye
bash-5.1# exit
exit
##lets check a folder has been created or not. 
[root@ip-172-31-115-189 ~]$ ls /var/lib/docker/volumes/mysql-db2/_data
'#ib_16384_0.dblwr'  '#innodb_temp'   binlog.000002   ca.pem            ib_buffer_pool   mysql        mysql_upgrade_history   public_key.pem    springdb   undo_002
##once created lets delet the db2 container
[root@ip-172-31-115-189 ~]$ docker stop db2
db2
[root@ip-172-31-115-189 ~]$ docker rm db2
db2
####once i delete the db2 container the volume is not deleted 
##[root@ip-172-31-115-189 ~]$ docker volume ls
DRIVER    VOLUME NAME

local     mysql-db2
[root@ip-172-31
###lts create a new container and attach the same volume 
[root@ip-172-31-115-189 ~]$ docker run -d --name db2 -e MYSQL_ALLOW_EMPTY_PASSWORD=true -v mysql-db2:/var/lib/mysql mysql:8.4
Unable to find image 'mysql:8.4' locally
8.4: Pulling from library/mysql
Digest: sha256:679e7e924f38a3cbb62a3d7df32924b83f7321a602d3f9f967c01b3df18495d6
Status: Downloaded newer image for mysql:8.4
6af870c6cb1f35edc32aec0c1c40d5b3f4ef4c9cf2f68cdb9616e73c31a2
#lets login inside the container and verify the springdb is there or not 
[root@ip-172-31-115-189 ~]$ docker exec -it db2 bash
bash-5.1# mysql -u root -p
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 8
Server version: 8.4.5 MySQL Community Server - GPL

Copyright (c) 2000, 2025, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| springdb           |
| sys                |
+--------------------+
5 rows in set (0.00 sec)

#lets exit the container and verify the contianer configuration that it has mapped to the same storage 
exit
exit
###inspect the container
[root@ip-172-31-115-189 ~]$ docker container inspect db2
##check the path it will match 
 164  docker container inspect db2
  ##you can grep it also
  166  docker container inspect db2 | grep Source

