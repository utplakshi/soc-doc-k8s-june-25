231  cd /root
  232  mkdir pyapp
  233  cd pyapp
  234  nano app.py
###isnide this file paste the content 
from flask import Flask

app = Flask(__name__)

@app.route('/')
def home():
    return "Hello from Flask in a Docker container!"

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
##3lets create an requirement.txt file
 nano requirements.txt
#####inside this just put one singel line 
Flask
###lets creat the docker file
      [root@ip-172-31-115-189 pyapp]$ nano dockerfile
#######inside the docker file we will put instruction
FROM python:3.9-slim
WORKDIR /app
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt
#copy the entire application inside your container
COPY . .
EXPOSE 5000
ENTRYPOINT ["python","app.py"]
###lets build the image 
docker build -t pythonapp .
docker images
  [root@ip-172-31-115-189 pyapp]$ docker run -d -p 82:5000 pythonapp
3ff18d31932755c361cba14f3a19b5efc28a43fa3b92976108148c3235fd4af1
[root@ip-172-31-115-189 pyapp]$ docker ps
CONTAINER ID   IMAGE       COMMAND                  CREATED             STATUS             PORTS                                     NAMES
3ff18d319327   pythonapp   "python app.py"          3 seconds ago       Up 2 seconds       0.0.0.0:82->5000/tcp, [::]:82->5000/tcp   reverent_lovelace
c77c0ca64d0c   app         "java -jar /app/web.â€¦"   About an hour ago   Up About an hour   0.0.0.0:81->8080/tcp, [::]:81->8080/tcp   trusting_keldysh
[root@ip-172-31-115-189 pyapp]$ curl localhost:82
Hello from Flask in a Docker container![root@ip-172-31-115-189 pyapp]$
###finaly step is to push the image to the registry
